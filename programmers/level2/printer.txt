import java.util.*

data class Printer(val data : Int, val prior : Int)

class Solution {
    fun solution(priorities: IntArray, location: Int): Int {
                val queue = LinkedList<Printer>()
        var count = 1
        for(i in 0 until priorities.size){
            queue.add(Printer(priorities[i],i))
        }
        while(true){
            val max =queue.maxByOrNull { it.data }?.data ?: return 0
            if(max == queue.first.data){
                if(queue.first.prior == location){
                    return count
                }else{
                    queue.pollFirst()
                    count++
                }
            }else{
                queue.pollFirst().run { 
                    queue.add(this)
                }
            }
        }
    }
}